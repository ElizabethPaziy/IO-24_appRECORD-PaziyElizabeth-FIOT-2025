import React, {useState} from 'react';
import {assets} from "../assets/assets.js";

const tasks = [
    {id: 1, title: "Предметне середовище та Бізнес-логіка"},
    {id: 2, title: "Тема, мета, місце розташування"},
    {id: 3, title: "Структура документа"},
    {id: 4, title: "HTML код ТАБЛИЦЬ"},
    {id: 5, title: "HTML код СПИСКУ"},
    {id: 6, title: "HTML код ЗОБРАЖЕННЯ"},
    {id: 7, title: "ВИСНОВКИ"},
];

const Laboratorna1 = () => {
    const [activeTask, setActiveTask] = useState(1);
    const [sidebarOpen, setSidebarOpen] = useState(false);

    const renderContent = () => {
        switch (activeTask) {
            case 1:
                return <div>
                    <div className="text-base font-light leading-relaxed mt-5">
                        <div className="mb-4">
                            <p className="font-semibold text-xl">ПРЕДМЕТНЕ СЕРЕДОВИЩЕ</p>
                        </div>
                        <p>Інтернет-магазин парфумерії – це зручна онлайн-платформа, створена для оптимізації процесів
                            продажу та керування асортиментом ароматів. Основна мета – забезпечити комфортний, швидкий
                            та безпечний вибір парфумів, оформлення замовлень і організацію доставки.

                            Завдяки інтуїтивному інтерфейсу користувачі можуть легко знаходити бажані аромати,
                            здійснювати оплату та відстежувати статус своїх замовлень. Реєстрація особистого кабінету
                            відкриває доступ до персоналізованих функцій, а каталог товарів дозволяє переглядати широкий
                            асортимент, використовувати фільтри для зручного пошуку та додавати вибрані позиції до
                            кошика. Процедура оформлення замовлення максимально спрощена, а сповіщення про зміну статусу
                            гарантують оперативну інформованість клієнтів.

                            Адміністративний модуль системи дає змогу ефективно керувати всіма бізнес-процесами:
                            оновлювати асортимент, встановлювати ціни, запускати акційні пропозиції, контролювати
                            складські залишки та відстежувати виконання замовлень.

                            Особлива увага приділяється безпеці особистих даних користувачів і адміністраторів. Уся
                            інформація зберігається в надійній базі даних із застосуванням сучасних методів шифрування.
                            Авторизований доступ забезпечує конфіденційність і захист даних.

                            Гнучка архітектура платформи дозволяє легко розширювати функціонал та масштабувати проєкт.
                            Використання передових веб-технологій підвищує продуктивність, скорочує час обробки
                            замовлень і робить процес покупок ще комфортнішим для клієнтів.</p>
                        <div className="mb-4 mt-4">
                            <p className="font-semibold text-xl">БІЗНЕС-ЛОГІКА</p>
                        </div>
                        <h2 className="text-lg mt-2">Функціональні можливості</h2>
                        <ol>
                            <li>Механізм реєстрації та входу в обліковий запис.</li>
                            <li>Особистий кабінет користувача із збереженням корзини</li>
                            <li>Функціонал кошика для оформлення замовлень.</li>
                            <li>Пошукова система для швидкого знаходження товарів.</li>
                            <li>Інтеграція платіжних систем (оплата онлайн або при отриманні).</li>
                            <li>Панель управління товарами для адміністратора.</li>
                            <li>Автоматичне інформування користувача про етапи виконання замовлення.</li>
                        </ol>

                        <h2 className="text-lg mt-2">Нефункціональні можливості</h2>
                        <ol>
                            <li>Гарантований захист особистих даних клієнтів.</li>
                            <li>Можливість розширення системи для збільшення навантаження.</li>
                            <li>Підвищення швидкодії для ефективної обробки запитів.</li>
                            <li>Адаптивний інтерфейс для комфортного користування з мобільних пристроїв.</li>
                            <li>Реалізація резервного збереження даних.</li>
                            <li>Простий та зрозумілий для користувача дизайн.</li>
                            <li>Підтримка інтеграції зі сторонніми сервісами (аналітичні системи, сервіси сповіщень
                                тощо).
                            </li>
                        </ol>
                    </div>
                </div>;
            case 2:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">Тема, мета, місце розташування WEB-застосунка та місце
                            звітного HTML-документу</p>
                    </div>

                    <p>
                        Тема: СТРУКТУРА HTML-ДОКУМЕНТА. ВИБІР ПРЕДМЕТНОЇ ГАЛУЗІ. GitHub. РОБОТА З РЕПОЗИТОРІЯМИ. ОСНОВНІ
                        ТЕГИ ТА
                        АТРИБУТИ в HTML-ДОКУМЕНТІ.
                    </p>

                    <p>
                        Мета: Придбати практичні навички роботи з GitHub, репозиторіями, HTML-документом, таблицями,
                        зображеннями,
                        посиланнями, списками, формами. Створити шаблон звітного HTML-документом для відображення
                        результатів роботи всіх лабораторних робіт.
                    </p>


                    <ul>
                        <li>
                            Посилання на репозиторій власного WEB-застосунку:
                            <a href="https://github.com/ElizabethPaziy/IO-24_appWEB-PaziyElizabeth-FIOT-2025"> https://github.com/ElizabethPaziy/IO-24_appWEB-PaziyLiza-FIOT-2025</a>
                        </li>
                        <li>
                            Посилання на репозиторій на живу сторінку власного WEB-застосунку:<a href="https://elizabethpaziy.github.io/IO-24_appWEB-PaziyElizabeth-FIOT-2025/">https://elizabethpaziy.github.io/IO-24_appWEB-PaziyElizabeth-FIOT-2025/</a>
                        </li>
                        <li>
                            Посилання на репозиторій звітного HTML-документа:
                            <a href="https://github.com/ElizabethPaziy/IO-24_appRECORD-PaziyElizabeth-FIOT-2025"> https://github.com/ElizabethPaziy/IO-24_appRECORD-PaziyLiza-FIOT-2025</a>
                        </li>
                        <li>
                            Посилання на репозиторій на живу сторінку звітного HTML-документу:<a
                            href="https://elizabethpaziy.github.io/IO-24_appRECORD-PaziyElizabeth-FIOT-2025/">https://elizabethpaziy.github.io/IO-24_appRECORD-PaziyElizabeth-FIOT-2025/</a>
                        </li>
                        <li>
                            Посилання на репозиторій з самостійними роботами:
                            <a href="https://github.com/ElizabethPaziy/IO-24_INDEPENDENT-PaziyElizabeth-FIOT-2025"> https://github.com/ElizabethPaziy/IO-24_INDEPENDENT-PaziyLiza-FIOT-2025</a>
                        </li>
                        <li>
                            Посилання на репозиторій живу сторінку з самостійними роботами:<a>https://elizabethpaziy.github.io/IO-24_INDEPENDENT-PaziyElizabeth-FIOT-2025/</a>
                        </li>
                    </ul>
                </div>;
            case 3:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">СТРУКТУРА HTML-ДОКУМЕНТА</p>
                    </div>
                    <p>HTML-документ складається з кількох основних частин:</p>
                    <ul>
                        <li><code>&lt;!DOCTYPE html&gt;</code> — визначає тип документа.</li>
                        <li><code>&lt;html&gt;</code> — кореневий тег HTML-документа.</li>
                        <li><code>&lt;head&gt;</code> — містить метаінформацію про сторінку (назва, кодировка, стилі
                            тощо).
                        </li>
                        <li><code>&lt;body&gt;</code> — містить основний вміст сторінки.</li>
                    </ul>

                    <p>У HTML:</p>
                    <ul>
                        <li><code>&lt;meta charset="UTF-8"&gt;</code> — задає кодування символів.</li>
                        <li><code>&lt;meta name="viewport"&gt;</code> — забезпечує адаптивний дизайн.</li>
                        <li><code>&lt;title&gt;</code> — визначає заголовок сторінки.</li>
                    </ul>

                    <p>HTML є основою будь-якої веб-сторінки, і його структура визначає, як відображається вміст у
                        браузері.</p>


                </div>;
            case 4:
                return <div>
                    <div className="mb-4 mt-4"><p className="font-semibold text-xl">HTML код ТАБЛИЦЬ</p></div>
                    <p>Приклад коду для таблиці:</p>
                    <img src={assets.table_code} alt="Код таблиці"/>
                    <p>Вигляд на сторінці:</p>
                    <img src={assets.table_photo} alt="Таблиця"/>
                    <p>Пояснення:</p>
                    <p>
                        Для представлення даних у вигляді таблиці застосовується тег <code>&lt;table&gt;</code>.
                        Структура таблиці складається з наступних основних тегів:
                        <ul>
                            <li><code>&lt;tr&gt;</code> — задає рядок таблиці.</li>
                            <li><code>&lt;td&gt;</code> — використовується для вмісту клітинок.</li>
                            <li><code>&lt;th&gt;</code> — призначений для створення заголовків стовпців або рядків,
                                візуально виділяється напівжирним шрифтом та центруванням.
                            </li>
                        </ul>
                        Таблиці ефективно використовуються для відображення впорядкованих даних у зручній формі.
                        <br/>
                        Приклад використання:
                        <pre><code>&lt;table&gt;
                            &lt;tr&gt;
                            &lt;th&gt;Назва 1&lt;/th&gt;
                            &lt;th&gt;Назва 2&lt;/th&gt;
                            &lt;/tr&gt;
                            &lt;tr&gt;
                            &lt;td&gt;Дані 1&lt;/td&gt;
                            &lt;td&gt;Дані 2&lt;/td&gt;
                            &lt;/tr&gt;
                            &lt;/table&gt;</code></pre>
                    </p>
                </div>;
            case 5:
                return <div>
                    <div className="mb-4 mt-4"><p className="font-semibold text-xl">HTML код СПИСКУ</p></div>
                    <p>Приклад коду для створення списку:</p>
                    <img src={assets.list_code} alt="Код списку"/>
                    <p>Вигляд на сторінці:</p>
                    <img src={assets.list_photo} alt="Список"/>
                    <p>Пояснення:</p>
                    <p>
                        Тег <code>&lt;ul&gt;</code> використовується для формування невпорядкованого списку, де
                        послідовність елементів не має значення.
                        Кожен пункт такого списку задається за допомогою тегу <code>&lt;li&gt;</code>. Зазвичай, ці
                        списки відображаються з маркерами.
                        <br/>
                        Для створення впорядкованого списку використовується тег <code>&lt;ol&gt;</code>. У такому
                        списку всі елементи мають чітку нумерацію або інші позначки (літери, римські цифри тощо). Як і
                        в <code>&lt;ul&gt;</code>, елементи задаються тегом <code>&lt;li&gt;</code>.
                        <br/>
                        Приклад використання:
                        <pre><code>&lt;ul&gt;
                            &lt;li&gt;Перший пункт&lt;/li&gt;
                            &lt;li&gt;Другий пункт&lt;/li&gt;
                            &lt;/ul&gt;</code></pre>
                    </p>
                </div>;
            case 6:
                return <div>
                    <div className="mb-4 mt-4"><p className="font-semibold text-xl">HTML код ЗОБРАЖЕННЯ</p></div>
                    <p>Приклад коду для додавання зображення:</p>
                    <img src={assets.image_code} alt="Код зображення"/>
                    <p>Вигляд на сторінці:</p>
                    <img src={assets.image_photo} alt="Зображення"/>
                    <p>Пояснення:</p>
                    <p>
                        Для вставки зображення у веб-документ використовується тег <code>&lt;img&gt;</code>. Основний
                        атрибут <code>src</code> вказує шлях до зображення (локальний файл чи посилання), а
                        атрибут <code>alt</code> містить текст, який відображається у випадку, якщо зображення не
                        вдалося завантажити.
                        <br/>
                        Цей тег є самозакриваючим і не має парного елемента. Додавання атрибуту <code>alt</code> є
                        обов'язковим для покращення доступності сайту та оптимізації для пошукових систем.
                        <br/>
                        Приклад:
                        <pre><code>&lt;img src="image.jpg" alt="Опис зображення" /&gt;</code></pre>
                    </p>
                </div>;
            case 7:
                return <div>
                    <div className="mb-4 mt-4"><p className="font-semibold text-xl">ВИСНОВКИ</p></div>
                    <p> У процесі виконання лабораторної роботи я здобула практичні навички роботи з HTML, сервісом
                        GitHub та графічним редактором Figma. Я детально ознайомилась зі структурою HTML-документа,
                        основними тегами, їхніми атрибутами та принципами побудови веб-сторінок. </p> <p> На початковому
                    етапі я визначила предметну галузь майбутнього веб-застосунку, розробила його концепцію, описала
                    бізнес-логіку, а також сформулювала функціональні та нефункціональні вимоги. Це дозволило мені краще
                    зрозуміти процес проєктування, розподілити функціонал застосунку та визначити ключові
                    компоненти. </p> <p> Далі я ознайомилась з можливостями Figma, пройшла серію навчальних уроків та
                    створила макет головної сторінки веб-застосунку. Це допомогло мені продумати структуру інтерфейсу й
                    визначити розташування основних елементів сторінки. </p> <p> Наступним етапом стала робота з GitHub.
                    Я зареєструвала обліковий запис, налаштувала робоче середовище за допомогою GitHub Desktop, створила
                    репозиторій для збереження файлів проєкту та опублікувала живу версію веб-застосунку. Також я
                    виконала клонування репозиторію для подальшої роботи локально. </p> <p> Після підготовки середовища
                    я приступила до створення HTML-коду головної сторінки, орієнтуючись на макет із Figma. На сторінці
                    були реалізовані: </p>
                    <ul>
                        <li>заголовки різних рівнів для логічної структури контенту;</li>
                        <li>зображення для покращення візуального оформлення сторінки;</li>
                        <li>таблиці для впорядкування інформації;</li>
                        <li>нумеровані та марковані списки для подання даних;</li>
                        <li>форми для збору інформації від користувачів;</li>
                        <li>посилання на сторінку з описом предметної галузі та бізнес-логіки веб-застосунку.</li>
                    </ul>
                    <p> Окрім цього, я створила окремий HTML-файл з описом предметної області та логіки роботи
                        веб-застосунку. </p> <p> Завершальним етапом стало виконання комітів у GitHub, налаштування
                    хостингу проєкту через GitHub Pages та перевірка працездатності веб-застосунку. Також я створила
                    репозиторії для самостійних завдань і звітного HTML-документа, у якому представила структуру
                    сторінки, HTML-код таблиць, списків, зображень, а також теоретичну інформацію про використані
                    елементи. </p> <p> Виконання цієї лабораторної роботи допомогло мені засвоїти основи верстки
                    веб-сторінок, навчитися працювати з GitHub, опанувати базові прийоми макетування у Figma та здобути
                    практичні навички організації коду і роботи з репозиторіями. Отримані знання стануть для мене міцною
                    основою для подальшого вивчення веб-розробки та реалізації складніших проєктів. </p>
                </div>;
            default:
                return <div>Виберіть розділ</div>;
        }
    };

    return (
        <div className="min-h-screen">
            <h1 className="text-4xl font-bold text-center mt-8 mb-8">Лабораторна робота 1</h1>
            <div className="flex flex-col lg:flex-row items-start gap-5 mt-5 px-4">
                <div
                    className={`flex flex-col gap-2 w-64 lg:w-48 ${sidebarOpen ? 'block' : 'hidden'} lg:block`}>
                    {tasks.map(task => (
                        <p
                            key={task.id}
                            className={`pl-3 py-2 border rounded transition-all cursor-pointer mt-4`}
                            onClick={() => setActiveTask(task.id)}
                        >
                            {task.title}
                        </p>
                    ))}
                </div>

                <button
                    className="lg:hidden p-2 border border-gray-300 rounded bg-white mb-4"
                    onClick={() => setSidebarOpen(!sidebarOpen)}
                >
                    {sidebarOpen ? 'Закрити меню' : 'Відкрити меню'}
                </button>

                <div className="w-full grid grid-cols-1 gap-4 gap-y-6">
                    {renderContent()}
                </div>
            </div>
        </div>
    );
};

export default Laboratorna1;